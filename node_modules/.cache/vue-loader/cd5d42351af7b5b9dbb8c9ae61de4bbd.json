{"remainingRequest":"G:\\SEMESTER6\\P3L\\FrontEnd\\P3L_Vuetify\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\SEMESTER6\\P3L\\FrontEnd\\P3L_Vuetify\\src\\components\\dashboardAdminContents\\addStockProductController.vue?vue&type=style&index=0&id=7ca8ad4c&scoped=true&lang=css&","dependencies":[{"path":"G:\\SEMESTER6\\P3L\\FrontEnd\\P3L_Vuetify\\src\\components\\dashboardAdminContents\\addStockProductController.vue","mtime":1589172647652},{"path":"G:\\SEMESTER6\\P3L\\FrontEnd\\P3L_Vuetify\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\SEMESTER6\\P3L\\FrontEnd\\P3L_Vuetify\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"G:\\SEMESTER6\\P3L\\FrontEnd\\P3L_Vuetify\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"G:\\SEMESTER6\\P3L\\FrontEnd\\P3L_Vuetify\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062718000},{"path":"G:\\SEMESTER6\\P3L\\FrontEnd\\P3L_Vuetify\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\SEMESTER6\\P3L\\FrontEnd\\P3L_Vuetify\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi52LWRhdGEtdGFibGV7DQogIG1hcmdpbi10b3A6IDIlOw0KfQ0KDQouZmlsbC1oZWlnaHQgIHsNCiAgICBwYWRkaW5nOiAyJTsNCiAgICBtYXJnaW46IDMlOw0KfQ0KDQoudi1zZWxlY3R7DQogIG1hcmdpbjogMCU7DQp9DQoNCi5tci00ew0KICBtYXJnaW4tbGVmdDogMy41JTsNCiAgY29sb3I6IHdoaXRlOw0KfQ0KDQoudHJ5ew0KICBwYWRkaW5nOiAyJTsNCn0NCg=="},{"version":3,"sources":["addStockProductController.vue"],"names":[],"mappingsqfA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"addStockProductController.vue","sourceRoot":"src/components/dashboardAdminContents","sourcesContent":["<template>\r\n<v-card class=\"fill-height\" fluid>\r\n  <v-card>\r\n  <v-form\r\n    ref=\"form\"\r\n    v-model=\"valid\"\r\n    lazy-validation\r\n  >\r\n\r\n    <v-layout row wrap style=\"margin:10px\">\r\n      <v-row>\r\n        <v-col cols=\"7\">\r\n          <v-text-field append-icon=\"mdi-book-account-outline\" name=\"id_pengadaan\" label=\"Id Transaksi\" type=\"text\" v-model=\"id_pengadaan\" height=\"34\" disabled=\"disabled\"></v-text-field>\r\n          <v-select\r\n            v-model=\"name_supplier\"\r\n            :items=\"name_supplier_array\"\r\n            :rules=\"[v => !!v || 'Item is required']\"\r\n            label=\"Supplier\"\r\n            required\r\n            outlined dense\r\n          ></v-select>\r\n          <!-- <v-text-field class=\"font-weight-bold\" v-model=\"totalHarga\" label=\"Harga Total\" name=\"totalHarga\" outlined single-line>\r\n          </v-text-field> -->\r\n        </v-col>\r\n      </v-row>\r\n      <v-row>\r\n        <v-col>\r\n          <v-textarea\r\n              v-model=\"totalHarga\"\r\n              label=\"Total Harga\"\r\n              color=\"teal\"\r\n              disabled\r\n              class=\"display-1\"\r\n              rows=\"1.7\"\r\n              auto-grow\r\n              rounded\r\n              no-resize\r\n            >\r\n          </v-textarea>\r\n          <v-btn\r\n            color=\"error\"\r\n            class=\"mr-4\"\r\n            @click=\"updateOrder()\"\r\n          >\r\n            Tambah Stok\r\n          </v-btn>\r\n\r\n          <v-btn\r\n            color=\"warning\"\r\n            class=\"mr-4\"\r\n            @click=\"deleteOrder(id_pengadaan)\"\r\n          >\r\n            Batal Pesan\r\n          </v-btn>\r\n\r\n          <v-btn\r\n            color=\"green\"\r\n            class=\"mr-4\"\r\n            @click=\"show()\"\r\n          >\r\n            Tampil Pengadaan\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n    </v-layout>\r\n  </v-form>\r\n  </v-card>\r\n\r\n  <v-card class=\"try\">\r\n  <v-form\r\n    ref=\"form\"\r\n    v-model=\"valid\"\r\n    lazy-validation\r\n  >\r\n    <!-- <v-text-field\r\n      v-model=\"name\"\r\n      :counter=\"10\"\r\n      :rules=\"nameRules\"\r\n      label=\"Name\"\r\n      required\r\n    ></v-text-field>\r\n\r\n    <v-text-field\r\n      v-model=\"email\"\r\n      :rules=\"emailRules\"\r\n      label=\"E-mail\"\r\n      required\r\n    ></v-text-field> -->\r\n    <v-row>\r\n      <v-col cols=\"6\">\r\n        <v-select\r\n          v-model=\"form.name_product\"\r\n          :items=\"name_product_array\"\r\n          :rules=\"[v => !!v || 'Item is required']\"\r\n          label=\"Produk\"\r\n          required\r\n        ></v-select>\r\n      </v-col>\r\n      <v-col cols=\"6\">\r\n          <v-text-field label=\"Jumlah Pembelian\" v-model=\"form.jumlah\" type='number' required></v-text-field>\r\n      </v-col>\r\n    </v-row>\r\n    <!-- <v-checkbox\r\n      v-model=\"checkbox\"\r\n      :rules=\"[v => !!v || 'You must agree to continue!']\"\r\n      label=\"Do you agree?\"\r\n      required\r\n    ></v-checkbox> -->\r\n\r\n    <!-- <v-btn\r\n      :disabled=\"!valid\"\r\n      color=\"success\"\r\n      class=\"mr-4\"\r\n      @click=\"validate\"\r\n    >\r\n      Validate\r\n    </v-btn> -->\r\n\r\n    <v-btn\r\n      color=\"primary\"\r\n      class=\"mr-2\"\r\n      @click=\"setForm()\"\r\n    >\r\n      Tambah Item\r\n    </v-btn>\r\n\r\n    <!-- <v-btn\r\n      color=\"warning\"\r\n      @click=\"resetValidation\"\r\n    >\r\n      Reset Validation\r\n    </v-btn> -->\r\n  </v-form>\r\n  <v-form>\r\n    <v-data-table :headers=\"headers\" :items=\"addOrders\" :search=\"keyword\" :loading=\"load\">\r\n        <template v-slot:body=\"{ items }\">\r\n            <tbody>\r\n                <tr v-for=\"(item,index) in items\" :key=\"item.id_detail_produk\">\r\n                    <td>{{ index + 1 }}</td>\r\n                    <td>{{ item.id_pengadaan}}</td>\r\n                    <td>{{ item.nama }}</td>\r\n                    <td>{{ item.jumlah}}</td>\r\n                    <td>{{ item.sub_harga}}</td>\r\n                    <td class=\"text-center\">\r\n                        <v-btn icon color=\"indigo\" light @click=\"editHandler(item)\">\r\n                            <v-icon>mdi-pencil</v-icon>\r\n                        </v-btn>\r\n                        <v-btn icon color=\"error\" light @click=\"deleteData(item.id_detail_produk)\">\r\n                            <v-icon>mdi-delete</v-icon>\r\n                        </v-btn>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </template>\r\n    </v-data-table> \r\n  </v-form>\r\n  </v-card>\r\n  <v-snackbar v-model=\"snackbar\" :color=\"color\" :multi-line=\"true\" :timeout=\"3000\">\r\n      {{ text }}\r\n      <v-btn dark text @click=\"snackbar = false\">\r\n          Close\r\n      </v-btn>\r\n  </v-snackbar>\r\n</v-card>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    data: () => ({\r\n      keyword: '',\r\n      load: false,\r\n      color: null,\r\n      snackbar: false,\r\n      text: '',\r\n      headers: [             \r\n          {               \r\n              text: 'No',               \r\n              value: 'no',             \r\n          },             \r\n          {               \r\n              text: 'Id Order Pemesanan',               \r\n              value: 'id_pengadaan'             \r\n          },             \r\n          {               \r\n              text: 'Nama Produk',               \r\n              value: 'nama'             \r\n          },             \r\n          {               \r\n              text: 'Jumlah Pesanan',               \r\n              value: 'jumlah'             \r\n          },\r\n          {               \r\n              text: 'Harga Sub Pemesanan',               \r\n              value: 'sub_harga'             \r\n          },\r\n          {               \r\n              text: 'Aksi',\r\n              value: null,\r\n              sortable: false\r\n          },         \r\n      ],         \r\n      valid: true,\r\n      typeInput: 'new',        \r\n      id_pengadaan: '',\r\n      id_supplier: 0,\r\n      name: '',\r\n      totalHarga: 0,\r\n      // nameRules: [\r\n      //   v => !!v || 'Name is required',\r\n      //   v => (v && v.length <= 10) || 'Name must be less than 10 characters',\r\n      // ],\r\n      // email: '',\r\n      // emailRules: [\r\n      //   v => !!v || 'E-mail is required',\r\n      //   v => /.+@.+\\..+/.test(v) || 'E-mail must be valid',\r\n      // ],\r\n      name_supplier: '',\r\n      // items: [\r\n      //   'Item 1',\r\n      //   'Item 2',\r\n      //   'Item 3',\r\n      //   'Item 4',\r\n      // ],\r\n      // checkbox: false,\r\n      suppliers: [],\r\n      products: [],\r\n      orders: [],\r\n      stock: [],\r\n      addOrders: [],\r\n      name_supplier_array: [],\r\n      name_product_array: [],\r\n      order : new FormData,\r\n      addOrder : new FormData,\r\n      form: {\r\n        name_product: '',\r\n        jumlah: 0,\r\n      },\r\n      updatedId: '',\r\n    }),\r\n    methods: {\r\n      validate () {\r\n        this.$refs.form.validate()\r\n      },\r\n      reset () {\r\n        this.$refs.form.reset()\r\n      },\r\n      resetValidation () {\r\n        this.$refs.form.resetValidation()\r\n      },\r\n      getOrder(){\r\n        var uri = this.$apiUrl + '/pengadaan_produk'             \r\n            this.$http.get(uri).then(response =>{                 \r\n                this.stock=response.data.data      \r\n                for(this.i = 0; this.i < this.stock.length; this.i++){\r\n                  if(this.stock[this.i].pengeluaran == 0){\r\n                    this.id_pengadaan = this.stock[this.i].id_pengadaan\r\n                  }else if(this.stock[this.i].id_pengadaan == localStorage.getItem('id_pengadaan')){\r\n                    this.id_pengadaan = this.stock[this.i].id_pengadaan,\r\n                    this.name_supplier = this.stock[this.i].nama\r\n                    console.log(this.name_supplier)\r\n                  }\r\n                }\r\n                \r\n            })               \r\n      },\r\n      getSupplier(){\r\n        var uri = this.$apiUrl + '/supplier'             \r\n            this.$http.get(uri).then(response =>{                 \r\n                this.suppliers=response.data.data             \r\n                this.suppliers.forEach(row => { this.name_supplier_array.push(row.nama) });\r\n            })               \r\n      },\r\n      getProduk(){\r\n        var uri = this.$apiUrl + '/produk'             \r\n            this.$http.get(uri).then(response =>{                 \r\n                this.products=response.data.data\r\n                for(this.i = 0; this.i < this.products.length; this.i++){\r\n                  if( parseInt(this.products[this.i].stok) <= parseInt(this.products[this.i].min_stok) ){\r\n                      // this.products.forEach(row => { this.name_product_array.push(row.nama) });\r\n                      this.name_product_array.push(this.products[this.i].nama);\r\n                      console.log(this.products[this.i].nama);\r\n                  }\r\n                }             \r\n            })               \r\n      },\r\n      getDetailOrder(){\r\n        this.addOrders = [];\r\n        this.totalHarga = 0;\r\n        var uri = this.$apiUrl + '/detail_pengadaan_produk'             \r\n            this.$http.get(uri).then(response =>{                 \r\n                this.orders=response.data.data\r\n                for(this.i = 0; this.i < this.orders.length; this.i++){\r\n                  if(this.orders[this.i].id_pengadaan == this.id_pengadaan){\r\n                    this.addOrders.push(this.orders[this.i]);\r\n                    this.totalHarga = parseInt(this.totalHarga) + parseInt(this.orders[this.i].sub_harga);\r\n                    console.log(this.totalHarga);\r\n                  }\r\n                }\r\n            })               \r\n      },\r\n      sendData(){\r\n            if(this.form.jumlah == 0){\r\n              this.load = true;\r\n              this.snackbar = true;               \r\n              this.text = 'Data belum diisi';               \r\n              this.color = 'red';               \r\n              this.load = false;\r\n              this.resetForm();\r\n            }else{\r\n              var id_produk, harga;\r\n              this.products.forEach(row => { \r\n                if(row.nama == this.form.name_product){\r\n                  id_produk = row.id_produk;\r\n                  harga = row.harga;\r\n                }\r\n              });\r\n              harga = harga*this.form.jumlah;\r\n              console.log(harga);\r\n              this.addOrder.append('id_produk', id_produk);\r\n              this.addOrder.append('id_pengadaan', this.id_pengadaan);\r\n              this.addOrder.append('sub_harga', harga);\r\n              this.addOrder.append('jumlah', this.form.jumlah);\r\n              this.addOrder.append('id_detail_produk', 1);\r\n              var uri =this.$apiUrl + '/detail_pengadaan_produk'             \r\n              this.load = true;             \r\n              this.$http.post(uri,this.addOrder).then(response =>{               \r\n                  this.snackbar = true; //mengaktifkan snackbar               \r\n                  this.color = 'green'; //memberi warna snackbar               \r\n                  this.text = response.data.message; //memasukkan pesan ke snackbar               \r\n                  this.load = false;                 \r\n                  this.getDetailOrder(); //mengambil data user               \r\n                  this.resetForm(); //mengambil data ukuran                       \r\n              }).catch(error =>{               \r\n                  this.errors = error               \r\n                  this.snackbar = true;               \r\n                  this.text = 'Try Again';               \r\n                  this.color = 'red';               \r\n                  this.load = false;           \r\n              })\r\n            }       \r\n      },\r\n      updateOrder(){\r\n        var id_supplier;\r\n        this.suppliers.forEach( row => { \r\n          if(row.nama == this.name_supplier){\r\n            id_supplier = row.id_supplier;\r\n          }\r\n         });\r\n         this.load = true             \r\n        if(id_supplier == null){            \r\n          this.snackbar = true;               \r\n          this.text = 'Harus memasukkan data supplier yg dituju!';               \r\n          this.color = 'red';               \r\n          this.load = false;               \r\n        }else{\r\n          var uri, requestBody;\r\n          console.log('this.totalHarga');\r\n          requestBody = {\r\n                id_pengadaan : this.id_pengadaan,\r\n                id_supplier : id_supplier,\r\n                pengeluaran : this.totalHarga\r\n            }\r\n            uri = this.$apiUrl + '/pengadaan_produk/' + this.updatedId;             \r\n            this.$http.put(uri, this.$qs.stringify(requestBody)).then(response =>{ \r\n                this.snackbar = true; //mengaktifkan snackbar               \r\n                this.color = 'green'; //memberi warna snackbar               \r\n                this.text = response.data.message; //memasukkan pesan ke snackbar               \r\n                this.load = false;    \r\n                this.resetOrder();\r\n            }).catch(error =>{               \r\n                this.errors = error               \r\n                this.snackbar = true;               \r\n                this.text = 'Try Again';               \r\n                this.color = 'red';               \r\n                this.load = false;               \r\n            })     \r\n            this.$router.push({ path: \"/dashboardAdmin/StockProduct\" });\r\n        }\r\n      }, \r\n      updateData(){             \r\n          var uri, requestBody, id_produk, harga;\r\n          this.products.forEach(row => { \r\n            if(row.nama == this.form.name_product){\r\n              id_produk = row.id_produk;\r\n              harga = row.harga;\r\n            }\r\n          });\r\n          harga = harga*this.form.jumlah;\r\n\r\n          requestBody = {\r\n              id_pengadaan : this.id_pengadaan,\r\n              id_detail_produk : this.updatedId,\r\n              nama : this.form.nama,\r\n              jumlah : this.form.jumlah,\r\n              id_produk : id_produk,\r\n              sub_harga : harga\r\n          }\r\n          uri = this.$apiUrl + '/detail_pengadaan_produk/' + this.updatedId;             \r\n          this.load = true             \r\n          this.$http.put(uri, this.$qs.stringify(requestBody)).then(response =>{ \r\n              this.snackbar = true; //mengaktifkan snackbar               \r\n              this.color = 'green'; //memberi warna snackbar               \r\n              this.text = response.data.message; //memasukkan pesan ke snackbar               \r\n              this.load = false;               \r\n              this.dialog = false               \r\n              this.getDetailOrder(); //mengambil data ukuran          \r\n              this.resetForm();               \r\n              this.typeInput = 'new';           \r\n          }).catch(error =>{               \r\n              this.errors = error               \r\n              this.snackbar = true;               \r\n              this.text = 'Try Again';               \r\n              this.color = 'red';               \r\n              this.load = false;               \r\n              this.typeInput = 'new';           \r\n          })         \r\n      },         \r\n      editHandler(item){           \r\n          this.typeInput = 'edit';            \r\n          this.form.name_product = item.nama,           \r\n          this.form.jumlah = item.jumlah,\r\n          this.updatedId = item.id_detail_produk\r\n          console.log(item.id_detail_produk)\r\n      },\r\n      deleteOrder(idDelete) { //mengahapus data      \r\n        console.log(idDelete);\r\n        if(this.totalHarga == 0){\r\n          this.order.append('id_pengadaan', idDelete);\r\n            var uri = this.$apiUrl + '/pengadaan_produk/delete'; //data dihapus berdasarkan id_ukuran\r\n            this.$http.post(uri, this.order).then(response =>{ \r\n                this.snackbar = true;                 \r\n                this.text = response.data.message;                 \r\n                this.color = 'green'                 \r\n                this.deleteDialog = false;                              \r\n            }).catch(error =>{                 \r\n                this.errors = error                 \r\n                this.snackbar = true;                 \r\n                this.text = 'Gagal Delete';                 \r\n                this.color = 'red'; \r\n            })         \r\n          this.$router.replace({ path : '/dashboardAdmin/StockProduct' })    \r\n        }else{\r\n          this.load = true;\r\n          this.snackbar = true;                 \r\n          this.text = 'Pastikan detail pembeliaan produk pengadaan kosong';                 \r\n          this.color = 'red'; \r\n          this.load = false;\r\n        }\r\n      },\r\n      deleteData(deleteId) { //mengahapus data      \r\n          console.log(deleteId);\r\n          this.addOrder.append('id_detail_produk', deleteId);\r\n          var uri = this.$apiUrl + '/detail_pengadaan_produk'; //data dihapus berdasarkan id_ukuran\r\n          this.$http.delete(uri, this.addOrder).then(response =>{ \r\n              this.snackbar = true;                 \r\n              this.text = response.data.message;                 \r\n              this.color = 'green'                 \r\n              this.deleteDialog = false;                 \r\n              this.getDetailOrder();             \r\n          }).catch(error =>{                 \r\n              this.errors = error                 \r\n              this.snackbar = true;                 \r\n              this.text = 'Gagal Delete';                 \r\n              this.color = 'red'; \r\n          })         \r\n      },\r\n      setForm(){             \r\n        if (this.typeInput === 'new') {              \r\n            this.sendData()\r\n        } else {\r\n            this.updateData()\r\n        }         \r\n      },          \r\n      resetForm(){             \r\n          this.form = {               \r\n              name_product : '',                   \r\n              jumlah : 0\r\n          }         \r\n      },\r\n      resetOrder(){\r\n        localStorage.setItem('id_pengadaan', 0);\r\n        localStorage.setItem('name_supplier', null);\r\n      }, \r\n      show(){\r\n        this.resetOrder();\r\n        this.$router.replace({ path : '/dashboardAdmin/ShowStock' })    \r\n      }   \r\n      \r\n    },     \r\n    mounted(){ \r\n        this.getOrder();\r\n        this.getSupplier(); \r\n        this.getProduk();\r\n        this.getDetailOrder();\r\n        this.name_supplier = localStorage.getItem('name_supplier');\r\n        console.log(localStorage.getItem('name_supplier'))\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped lang=\"css\">\r\n.v-data-table{\r\n  margin-top: 2%;\r\n}\r\n\r\n.fill-height  {\r\n    padding: 2%;\r\n    margin: 3%;\r\n}\r\n\r\n.v-select{\r\n  margin: 0%;\r\n}\r\n\r\n.mr-4{\r\n  margin-left: 3.5%;\r\n  color: white;\r\n}\r\n\r\n.try{\r\n  padding: 2%;\r\n}\r\n</style>"]}]}